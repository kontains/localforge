import {browserInteract} from "./browserUtils.js";

export default {
    name: 'BrowserInteract',
    schema: {
        type: 'function',
        function: {
            name: 'BrowserInteract',
            description:
                  "Run's **one** Puppeteer Page action (click, type, evaluate) against an already-claimed browser.\n" +
                  "* Assume we have a page, generated by javascript puppeteer.launch().newPage(), use this to call a method with specific params on that object.\n" +
                  "* Clears that page’s stored console logs **before** the action.\n" +
                  "* Returns either the action’s native result (for `evaluate`) or a short status string.",
            parameters: {
                type: 'object',
                properties: {
                    method: {
                        description:
                            "Exact Page method you want to invoke.",
                        enum: [
                            "click",
                            "type",
                            "keyboard.press",
                            "evaluate",
                            "mouse.click"
                        ]
                    },
                    methodArguments: {
                        type: 'string',
                        description: `
JSON string containing the **exact argument object** for the chosen \`method\`.

╭──────────────────────────────────────────────────────────╮
│  Supported schemas                                       │
├──────────────────────────┬───────────────────────────────┤
│ click                    │ {"selector": "<css>", "options?": {...}}         │
│ type                     │ {"selector": "<css>", "text": "<text>", "options?": {...}} │
│ keyboard.press           │ {"key": "<Key>", "options?": {...}}              │
│ evaluate                 │ {"pageFunction": "<string|function>", "args?": [...]} │
│ mouse.click              │ {"x": <number>, "y": <number>, "options?": {...}} │
╰──────────────────────────┴───────────────────────────────╯

Notes
• Pass **only** the fields listed for the selected method—nothing extra.  
• Wrap the entire object in a string because the tool-calling protocol
  transmits arguments as JSON *strings*.  
• Omit \`options\` when defaults are fine.

Example – click the “Login” button:
  "{\"selector\":\"#login-btn\"}"
`
                    },
                    browserId: {
                        type: 'string',
                        description: 'Indicates which browser you are making this operation in, this is important, if you dont have browserId, then use BrowserClaim tool to claim one'
                    }
                },
                required: ['browserId', 'codeToExecute'],
                additionalProperties: false
            }
        }
    },
    execute: async (args) => browserInteract(args),
    getDescriptiveText: (args) => {
        return 'Navigating';
    },
    ui: {
        icon: 'public'
    }
};